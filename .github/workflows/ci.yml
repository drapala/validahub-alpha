name: CI

on:
  push:
    branches: [ main, master, feat/* ]
  pull_request:
    branches: [ main, master ]

env:
  PYTHONPATH: packages
  PYTHON_VERSION: '3.11'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy black
          if [ -f pyproject.toml ]; then pip install -e ".[dev]"; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run ruff linting
        run: |
          if [ -d "packages" ]; then
            ruff check packages tests
          else
            ruff check src tests
          fi

      - name: Run mypy type checking
        run: |
          if [ -d "packages" ]; then
            mypy packages --strict
          else
            mypy src --strict || true  # TODO: Fix mypy errors and make strict
          fi

      - name: Check black formatting
        run: |
          if [ -d "packages" ]; then
            black --check packages tests
          else
            black --check src tests
          fi

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]; then pip install -e ".[dev]"; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; else pip install pytest hypothesis pytest-cov; fi

      - name: Run tests with coverage
        run: |
          if [ -d "packages" ]; then
            pytest tests/unit tests/integration -v --tb=short --cov=packages --cov-report=term-missing --cov-fail-under=80
          else
            pytest tests/unit tests/integration -v --tb=short --cov=src --cov-report=term-missing --cov-fail-under=80
          fi

  architecture:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]; then pip install -e ".[dev]"; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; else pip install pytest; fi

      - name: Run architecture tests
        run: |
          pytest tests/architecture/ -v --tb=short

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit

      - name: Run Bandit security scan
        run: bandit -r src -ll

      - name: Check dependencies for vulnerabilities
        run: pip-audit --desc || true

